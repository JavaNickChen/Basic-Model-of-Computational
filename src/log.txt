
Create the action table.
Number of states: 5	,	 Number of input character: 3
End input:c
End state:c
Execute: 
Start state= INIT
receive signal: at clock 0	,	input : a
transition: at clock 0	,	current_state: INIT	,	input : a	,	next_state : a
receive signal: at clock 1	,	input : b
transition: at clock 1	,	current_state: a	,	input : b	,	next_state : b
receive signal: at clock 2	,	input : c
transition: at clock 2	,	current_state: b	,	input : c	,	next_state : c
receive signal: at clock 3	,	input : a
transition: at clock 3	,	current_state: c	,	input : a	,	next_state : a
receive signal: at clock 4	,	input : b
transition: at clock 4	,	current_state: a	,	input : b	,	next_state : b
receive signal: at clock 5	,	input : c
transition: at clock 5	,	current_state: b	,	input : c	,	next_state : c
Terminal: at clock 6	,	state: c	,	input : c
Reach the end state.
Create a viz graph.
write 389 bytes to 'test_picture.gv'
run ['dot', '-Kdot', '-Tpdf', '-O', 'test_picture.gv']
view: 'test_picture.gv.pdf'

Create the action table.
Number of states: 5	,	 Number of input character: 5
End input:TURN OFF
End state:RED
Execute: 
Start state= INIT
receive signal: at clock 0	,	input : TURN ON
transition: at clock 3	,	current_state: INIT	,	input : TURN ON	,	next_state : RED
receive signal: at clock 5	,	input : TURN GREEN
transition: at clock 7	,	current_state: RED	,	input : TURN GREEN	,	next_state : GREEN
receive signal: at clock 8	,	input : TURN YELLOW
transition: at clock 10	,	current_state: GREEN	,	input : TURN YELLOW	,	next_state : YELLOW
receive signal: at clock 11	,	input : TURN RED
transition: at clock 13	,	current_state: YELLOW	,	input : TURN RED	,	next_state : RED
Terminal: at clock 15	,	state: RED	,	input : TURN OFF
Reach the end state.

Create the action table.
Number of states: 5	,	 Number of input character: 5
End input:TURN OFF
End state:RED
Execute: 
Start state= INIT
Unknown state transition.
Not reach the end state.
